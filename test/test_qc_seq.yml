# QC pipeline should attempt to generate the specified files
- name: test-qc-dry-run-trio
  tags:
    - dry-run
    - qc-seq
  command: >
    snakemake
    --snakefile includes/qc-seq/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/qc-seq.json
    --config pepfile=test/pep/chrM-trio-subsamples.csv
  stdout:
    contains:
    # The trimmed fastq files should be merged
    - "TestSample1/qc-seq/TestSample1-R1.fq.gz"
    - "TestSample1/qc-seq/TestSample1-R2.fq.gz"
    - "TestSample2/qc-seq/TestSample2-R1.fq.gz"
    - "TestSample2/qc-seq/TestSample2-R2.fq.gz"
    - "TestSample3/qc-seq/TestSample3-R1.fq.gz"
    - "TestSample3/qc-seq/TestSample3-R2.fq.gz"
    - "rule sequali"
    # The forward/reverse fastq files from the PEP should be handled correctly
    contains_regex:
      - "cutadapt .*TestSample1.*pigz --decompress --stdout test/data/fastq/R1.fq.gz"
      - "cutadapt .*TestSample1.*pigz --decompress --stdout test/data/fastq/R2.fq.gz"

      - "cutadapt .*TestSample2.*pigz --decompress --stdout test/data/fastq/R1.fq.gz 'test/data/fastq/SRR8615409 chrM_1.fastq.gz'"
      - "cutadapt .*TestSample2.*pigz --decompress --stdout test/data/fastq/R2.fq.gz 'test/data/fastq/SRR8615409 chrM_2.fastq.gz'"

      - "cutadapt .*TestSample3.*pigz --decompress --stdout test/data/fastq/R1.fq.gz 'test/data/fastq/SRR8615409 chrM_1.fastq.gz' test/data/fastq/SRR8615687_flt3_1.fastq.gz"
      - "cutadapt .*TestSample3.*pigz --decompress --stdout test/data/fastq/R2.fq.gz 'test/data/fastq/SRR8615409 chrM_2.fastq.gz' test/data/fastq/SRR8615687_flt3_2.fastq.gz"

- name: test-qc-hamlet-config
  tags:
    - dry-run
    - qc-seq
  command: >
    snakemake
    --snakefile includes/qc-seq/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/hamlet-dry.json
    --config pepfile=test/pep/chrM-trio-subsamples.csv
  stdout:
    contains:
    # The trimmed fastq files should be merged
    - "TestSample1/qc-seq/TestSample1-R1.fq.gz"
    - "TestSample1/qc-seq/TestSample1-R2.fq.gz"
    - "TestSample2/qc-seq/TestSample2-R1.fq.gz"
    - "TestSample2/qc-seq/TestSample2-R2.fq.gz"
    - "TestSample3/qc-seq/TestSample3-R1.fq.gz"
    - "TestSample3/qc-seq/TestSample3-R2.fq.gz"
    - "rule sequali"
    # The forward/reverse fastq files from the PEP should be handled correctly
    contains_regex:
      - "cutadapt .*TestSample1.*pigz --decompress --stdout test/data/fastq/R1.fq.gz"
      - "cutadapt .*TestSample1.*pigz --decompress --stdout test/data/fastq/R2.fq.gz"

      - "cutadapt .*TestSample2.*pigz --decompress --stdout test/data/fastq/R1.fq.gz 'test/data/fastq/SRR8615409 chrM_1.fastq.gz'"
      - "cutadapt .*TestSample2.*pigz --decompress --stdout test/data/fastq/R2.fq.gz 'test/data/fastq/SRR8615409 chrM_2.fastq.gz'"

      - "cutadapt .*TestSample3.*pigz --decompress --stdout test/data/fastq/R1.fq.gz 'test/data/fastq/SRR8615409 chrM_1.fastq.gz' test/data/fastq/SRR8615687_flt3_1.fastq.gz"
      - "cutadapt .*TestSample3.*pigz --decompress --stdout test/data/fastq/R2.fq.gz 'test/data/fastq/SRR8615409 chrM_2.fastq.gz' test/data/fastq/SRR8615687_flt3_2.fastq.gz"

# QC pipeline should run successfully on multiple samples with differing number
# of readgroups
- name: test-qc-trio
  tags:
    - functional
    - qc-seq
  command: >
    snakemake
    --snakefile includes/qc-seq/Snakefile
    --workflow-profile test
    --configfile test/data/config/qc-seq.json
    --config pepfile=test/pep/chrM-trio-subsamples.csv
  files:
    # QC pipeline should create output files for TestSample1
    - path: "TestSample1/qc-seq/TestSample1-R1.fq.gz"
    - path: "TestSample1/qc-seq/TestSample1-R2.fq.gz"
    # QC pipeline should create output files for TestSample2
    - path: "TestSample2/qc-seq/TestSample2-R1.fq.gz"
    - path: "TestSample2/qc-seq/TestSample2-R2.fq.gz"
    # QC pipeline should create output file for TestSample3
    - path: "TestSample3/qc-seq/TestSample3-R1.fq.gz"
    - path: "TestSample3/qc-seq/TestSample3-R2.fq.gz"
    - path: "log/cutadapt.TestSample3.out"
      contains:
        - "This is cutadapt"
    - path: "multiqc_qc_seq.html"
      must_not_contain:
        - "TestSample1.cutadapt.json"
        - "qc-seq"
        # Sequali sample names must be renamed
        - "TestSample1-R1.fq.gz_TestSample1-R2.fq.gz"
      # The MultiQC report must contain all relevant sections
      contains:
        - "Cutadapt"
        - "Sequali"
    - path: TestSample1/qc-seq/sequali/TestSample1.json
    - path: TestSample1/qc-seq/sequali/TestSample1.html
    - path: multiqc_filelist_qc_seq.txt
      should_exist: False

- name: lint-qc
  tags:
    - sanity
    - qc-seq
  command: >
    snakemake
    --lint
    --snakefile includes/qc-seq/Snakefile
    --configfile test/data/config/qc-seq.json
    --config pepfile=test/pep/chrM-trio-subsamples.csv

- name: snakefmt-qc
  tags:
    - sanity
    - qc-seq
  command: snakefmt --check includes/qc-seq/

- name: black-qc
  tags:
    - sanity
    - expression
  command: black --check includes/qc-seq/

- name: test-qc-seq-sample-with-space
  tags:
    - sanity
    - qc-seq
  command: >
    snakemake
    --snakefile includes/qc-seq/Snakefile
    --workflow-profile test
    --configfile test/data/config/qc-seq.json
    --config pepfile=test/pep/invalid.csv
  exit_code: 1
  stderr:
    contains:
      - 'RuntimeError: Spaces in samples are not supported ("SRR 8615687")'
