- name: Dry run of expression module
  tags:
    - dry-run
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/expression.json
    --config pepfile=test/pep/expression.csv
  stdout:
    contains:
      - "rule merge_samples"
      - "rule transform_counts"
      - "rule json_output"
      - "rule seamless"
      - "rule amlmapr"

- name: test-expression-hamlet-config
  tags:
    - dry-run
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/hamlet-dry.json
    --config pepfile=test/pep/expression.csv

- name: Test error on unknown housekeeping gene
  tags:
    - sanity
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/expression.json
    --config pepfile=test/pep/expression.csv
             housekeeping="Z"
  exit_code: 1
  stdout:
    contains:
      - "Unknown housekeeping gene: Z"

- name: Test error on duplicate gene
  tags:
    - sanity
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/expression.json
    --config pepfile=test/pep/expression.csv
             housekeeping="MT-CO2"
             bed=test/data/reference/transcripts_chrM.bed
             genes_of_interest="MT-ND3 MT-ND2"
  exit_code: 1
  stdout:
    contains:
      - "MT-ND3 is specified twice: in the bed file and genes_of_interest"

- name: Run the expression module with a bed file
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression.csv
      bed=test/data/reference/transcripts_chrM.bed
      report="MT-ND4 MT-TH"
  exit_code: 0
  files:
    - path: SRR8615409/expression/coverage.tsv
      contains:
        - "MT-CO2\t282\t158\t124"
    # Test the transformed coverage counts to be used with seAMLess. This will
    # only work if there are at least two samples, so we put the sample in
    # there twice
    - path: SRR8615409/expression/by_strand.tsv
      must_not_contain:
        - "SRR8615409"
      contains:
        # Result for unstranded data
        - "ENSG00000211459\t30"
    # Since MT-CO2 was used both as gene of interest and only housekeeping
    # gene, the normalized expression for every strand must be 1.0
    # MT-CO2 was chosen specifically so it does not overlap any other
    # transcripts, which would be taken into account by STAR and give lower
    # counts
    - path: SRR8615409/expression/coverage.normalized.tsv
      contains:
        - "MT-CO2\t1.0\t1.0\t1.0"
    # Test the seAMLess output
    - path: SRR8615409/expression/seAMLess/deconvolution.csv
      contains:
        - "CD14 Mono"
    - path: SRR8615409/expression/seAMLess/cell-types.png
    # Test the AMLmapR output
    - path: SRR8615409/expression/AMLmapR/aml_cluster_predictions.csv
      contains:
        - "AML.MRC.1."
    # Test that we create the multiqc report
    - path: multiqc_expression.html
      contains:
        - "MT-CO2"
        # Test for section descriptions in MultiQC custom content
        - "Normalized gene expression"
        - "Estimated cell type composition"
        # Test for seAMLess output in html
        - "CD14 Mono"
        # Test for unstranded data in the html report
        - "mqc_expression_unstranded-section"
      must_not_contain:
        # Test that the plot is not part of the MultiQC data
        - "cell-types.png"
    - path: multiqc_filelist_expression.txt
      should_exist: False
    - path: merged_expression_cell_types_mqc.tsv
      should_exist: False
    - path: merged_expression_stranded_mqc.tsv
      should_exist: False
    - path: merged_expression_unstranded_mqc.tsv
      should_exist: False

    - path: SRR8615409/expression/expression-output.json
      contains:
        - "MT-ND4"
        - "MT-TH"
        # Output from seAMLess
        - "cell-types"
        - "CD14 Mono"
        - "cell-types.png"
        # Output from AMLmapR
        - "RUNX1..RUNX1T1"

- name: Run the expression module with genes of interest
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression.csv
      genes_of_interest="MT-CO2 MT-ND4 MT-TH"
  exit_code: 0
  files:
    - path: SRR8615409/expression/coverage.tsv
      contains:
        - "MT-CO2\t282\t158\t124"
    # Since MT-CO2 was used both as gene of interest and only housekeeping
    # gene, the normalized expression for every strand must be 1.0
    # MT-CO2 was chosen specifically so it does not overlap any other
    # transcripts, which would be taken into account by STAR and give lower
    # counts
    - path: SRR8615409/expression/coverage.normalized.tsv
      contains:
        - "MT-CO2\t1.0\t1.0\t1.0"

# The output files will be empty, but it should not crash
- name: Run the expression module without genes of interest or bed
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression.csv
  exit_code: 0
  files:
    - path: SRR8615409/expression/coverage.tsv
    - path: SRR8615409/expression/coverage.normalized.tsv

- name: Run the expression module with strandedness specified
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --notemp
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression_strandedness.csv
      genes_of_interest="MT-RNR1"
  exit_code: 0
  files:
    # Test the seamless value for the forward sample
    - path: SRR8615409-forward/expression/by_strand.tsv
      contains:
        # Results for the forward strand
        - "ENSG00000211459\t18"
    # Test the seamless input for the reverse sample
    - path: SRR8615409-reverse/expression/by_strand.tsv
      contains:
        # Results for the reverse strand
        - "ENSG00000211459\t12"
    # Test the seamless input for the unstranded sample
    - path: SRR8615409-unstranded/expression/by_strand.tsv
      contains:
        # Results for the reverse strand
        - "ENSG00000211459\t30"
    - path: merged_expression_stranded_mqc.tsv
      contains:
        - "id: mqc_expression_stranded"
        - "Sample\tMT-RNR1"
        - "SRR8615409-forward\t0.113"
        - "SRR8615409-reverse\t0.096"
      must_not_contain:
        - "SRR8615409-unstranded"
    # Check the multiqc table for unstranded samples
    - path: merged_expression_unstranded_mqc.tsv
      contains:
        - "id: mqc_expression_unstranded"
        - "Sample\tMT-RNR1"
        - "SRR8615409-unstranded\t0.106"
      must_not_contain:
        - "SRR8615409-forward"
        - "SRR8615409-reverse"


- name: Check formatting of Snakemake files
  tags:
    - sanity
    - expression
  command: snakefmt --check includes/expression/

- name: black-expression
  tags:
    - sanity
    - expression
  command: black --check includes/expression/

- name: mypy-expression
  tags:
    - sanity
    - expression
  command: black --check includes/expression/
