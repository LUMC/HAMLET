# Expression pipeline should attempt to generate specified files
- name: test-expression-dry-run-trio
  tags:
    - dry-run
    - expression
  command: >
    snakemake -n
    --snakefile includes/expression/Snakefile
    --configfile test/data/config/chrM.json
    --config pepfile=test/pep/chrM-bam-trio.csv
  stdout:
    contains:
      - "TestSample1/expression/TestSample1.bases_per_exon"
      - "TestSample1/expression/TestSample1.bases_per_gene"
      - "TestSample1/expression/TestSample1.exon_ratios"
      - "TestSample1/expression/TestSample1.fragments_per_gene"
      - "TestSample1/expression/TestSample1.raw_base"
      - "TestSample2/expression/TestSample2.bases_per_exon"
      - "TestSample2/expression/TestSample2.bases_per_gene"
      - "TestSample2/expression/TestSample2.exon_ratios"
      - "TestSample2/expression/TestSample2.fragments_per_gene"
      - "TestSample2/expression/TestSample2.raw_base"
      - "TestSample3/expression/TestSample3.bases_per_exon"
      - "TestSample3/expression/TestSample3.bases_per_gene"
      - "TestSample3/expression/TestSample3.exon_ratios"
      - "TestSample3/expression/TestSample3.fragments_per_gene"
      - "TestSample3/expression/TestSample3.raw_base"

# Singularity should be available
- name: test-expression-sanity-singularity
  tags:
    - sanity
    - expression
  command: >
    singularity --version
  stdout:
    contains_regex:
      - "singularity(-ce)? version 3"

# Expression pipeline should run successfully
- name: test-expression-chrM
  tags:
    - functional
    - expression
  command: >
    snakemake -rp
    --snakefile includes/expression/Snakefile
    --configfile test/data/config/chrM.json
    --config pepfile=test/pep/chrM-bam.csv
    --cores 1
    --notemp
    --verbose
    --use-singularity
    --singularity-args '--cleanenv --bind /tmp'
    --singularity-prefix '~/.singularity/cache/snakemake'
  files:
    # Should calculate the exon ratio's vs HMBS (which has 0 expression in our test sample)
    - path: "SRR8615409/expression/SRR8615409.exon_ratios"
      contains:
        - "sample_name\texon\tcount\tratio\tabove_threshold\tdivisor_gene\tdivisor_exp"
        - "SRR8615409\tMT-TA:5586-5655\t219\tinf\tyes\tHMBS\t0"

    # Should contain all transcripts specified in the expression bedfile
    - path: "SRR8615409/expression/SRR8615409.bases_per_exon"
      contains:
        - "exon\tSRR8615409"
        - "MT-TF,MT-RNR1,MT-TV,MT-RNR2,MT-TL1"
        - "MT-TP"
    # Bases per gene should be the sum of bases per exons. To test this, we
    # artifically split MT-CO1 into two (adjacent) exons
    - path: "SRR8615409/expression/SRR8615409.bases_per_exon"
      contains:
        - "MT-CO1:5903-6500\t37353"
        - "MT-CO1:6500-7445\t50222"
    - path: "SRR8615409/expression/SRR8615409.bases_per_gene"
      contains:
        - "gene\tSRR8615409"
        - "MT-CO1\t87575"
    # The number of fragments should only include unique molecules. If the
    # forward and reverse map to the same exon, they are counted as one
    # fragment
    - path: "SRR8615409/expression/SRR8615409.fragments_per_gene"
      contains:
        - "MT-CO1\t455"
        # Should contain special fields with stats about unusable reads
        - "__no_feature"
        - "__ambiguous"
        - "__not_aligned"
        - "__alignment_not_unique"
    # Expression pipeline should create the file with raw base counts
    - path: "SRR8615409/expression/SRR8615409.raw_base"
    # Test the log files
    - path: "log/idsort_aln.SRR8615409.txt"
      contains:
        - "SortSam"
    - path: "log/count_fragments.SRR8615409.txt"
      contains:
        - "GFF lines processed."
    - path: "log/count_raw_bases.SRR8615409.txt"
    - path: "log/count_bases_exon.SRR8615409.txt"
    - path: "log/count_bases_gene.SRR8615409.txt"
    - path: "log/calc_exon_ratios.SRR8615409.txt"

- name: lint-expression
  tags:
    - sanity
    - expression
  command: >
    snakemake
    --lint
    --snakefile includes/expression/Snakefile
    --configfile test/data/config/chrM.json
    --config pepfile=test/pep/chrM-bam.csv

- name: snakefmt-expression
  tags:
    - sanity
    - expression
  command: snakefmt --check includes/snv-expression
