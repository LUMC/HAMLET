# ITD pipeline should attempt to generate the specified files
- name: test-itd-dry-run-trio
  tags:
    - dry-run
    - itd
  command: >
    snakemake -n
    --snakefile includes/itd/Snakefile
    --configfile test/data/config/test-dry-run-trio.json
    --config pepfile=test/pep/qc-seq/qc-trio.yml
  stdout:
    contains:
      - "TestSample1/itd/TestSample1.kmt2a.csv"
      - "TestSample1/itd/TestSample1.kmt2a.bg.csv"
      - "TestSample1/itd/TestSample1.kmt2a.png"
      - "TestSample1/itd/TestSample1.flt3.csv"
      - "TestSample1/itd/TestSample1.flt3.bg.csv"
      - "TestSample1/itd/TestSample1.flt3.png"
      - "TestSample2/itd/TestSample2.kmt2a.csv"
      - "TestSample2/itd/TestSample2.kmt2a.bg.csv"
      - "TestSample2/itd/TestSample2.kmt2a.png"
      - "TestSample2/itd/TestSample2.flt3.csv"
      - "TestSample2/itd/TestSample2.flt3.bg.csv"
      - "TestSample2/itd/TestSample2.flt3.png"
      - "TestSample3/itd/TestSample3.kmt2a.csv"
      - "TestSample3/itd/TestSample3.kmt2a.bg.csv"
      - "TestSample3/itd/TestSample3.kmt2a.png"
      - "TestSample3/itd/TestSample3.flt3.csv"
      - "TestSample3/itd/TestSample3.flt3.bg.csv"
      - "TestSample3/itd/TestSample3.flt3.png"

# Singularity should be available
- name: test-itd-sanity-singularity
  tags:
    - sanity
    - itd
  command: >
    singularity --version
  stdout:
    contains_regex:
      - "singularity(-ce)? version 3"

# ITD pipeline should run successfully and actually create the specified files
- name: test-itd
  tags:
    - functional
    - itd
    - flt3
    - kmt2a
  command: >
    snakemake -rp
    --snakefile includes/itd/Snakefile
    --configfile test/data/config/test-itd.json
    --config pepfile=test/pep/itd/itd.yml
    --cores 1
    --notemp
    --verbose
    --use-singularity
    --singularity-args '--cleanenv --bind /tmp'
    --singularity-prefix '~/.singularity/cache/snakemake'
    SRR8615687/itd/SRR8615687.flt3.png
    SRR8616218/itd/SRR8616218.kmt2a.png
  files:
    # ITD pipeline should create a png of the detected repeat events for flt3
    - path: "SRR8615687/itd/SRR8615687.flt3.png"
    # ITD pipeline should create a csv file of the detected soft-clip reads per
    # position for flt3
    - path: "SRR8615687/itd/SRR8615687.flt3.bg.csv"
      # The csv file should contain the following events
      contains:
        - "position\tcoverage\tsoft_clip_count"
        - "1852\t1686\t501"
        - "1883\t1614\t1063"
    # ITD pipeline should create a final csv file of the detected internal
    # tandem repeats
    - path: "SRR8615687/itd/SRR8615687.flt3.csv"
      # The csv file should contain the header, and two internal tandem repeats
      contains:
        - "td_starts\ttd_ends\trose_start_count\trose_end_count\trose_start_pos\trose_start_anchor_pos\trose_end_pos\trose_end_anchor_pos\tboundary_type\tfuzziness"
        - "1853\t1881,1882\t495\t4\t1852\t1882\t1882\t1853\tfuzzy-end\t1"
        - "1853\t1882\t495\t1059\t1852\t1882\t1883\t1853\texact\t0"

    # ITD pipeline should create a png of the detected repeat events for kmt2a
    - path: "SRR8616218/itd/SRR8616218.kmt2a.png"
    # ITD pipeline should create a csv file of the detected soft-clipped reads
    # per position for kmt2a
    - path: "SRR8616218/itd/SRR8616218.kmt2a.bg.csv"
      # The csv file should contain the header, and soft-clip counts on two
      # positions
      contains:
        - "position\tcoverage\tsoft_clip_count"
        - "452\t32\t46"
        - "4111\t252\t26"
    # ITD pipeline should create a final csv file of the detected internal
    # tandem repeats
    - path: "SRR8616218/itd/SRR8616218.kmt2a.csv"
      # The csv file should contain the header, and a single internal tandem
      # repeat
      contains:
        - "td_starts\ttd_ends\trose_start_count\trose_end_count\trose_start_pos\trose_start_anchor_pos\trose_end_pos\trose_end_anchor_pos\tboundary_type\tfuzziness"
        - "453,457\t4106,4110\t40\t26\t452\t4106\t4111\t457\tfuzzy\t4"

# ITD pipeline should run successfully when there are no reads that map to flt3 or kmt2a
- name: test-flt3-kmt2a-no-reads
  tags:
    - functional
    - itd
  command: >
    snakemake -rp
    --snakefile includes/itd/Snakefile
    --configfile test/data/config/test-chrM.json
    --config pepfile=test/pep/snv-indels/chrM.yml
    --cores 1
    --notemp
    --verbose
    --use-singularity
    --singularity-args '--cleanenv --bind /tmp'
    --singularity-prefix '~/.singularity/cache/snakemake'
  files:
    # ITD pipeline should create the output files for kmt2a
    - path: "SRR8615409/itd/SRR8615409.kmt2a.png"
    # The csv output file should only contain the header
    - path: "SRR8615409/itd/SRR8615409.kmt2a.bg.csv"
      contains:
        - "position\tcoverage\tsoft_clip_count"

    # The final csv output file for kmt2a should only contain the header
    - path: "SRR8615409/itd/SRR8615409.kmt2a.csv"
      contains:
        - "td_starts\ttd_ends\trose_start_count\trose_end_count\trose_start_pos\trose_start_anchor_pos\trose_end_pos\trose_end_anchor_pos\tboundary_type\tfuzziness"

    # ITD pipeline should create the output files for flt3
    - path: "SRR8615409/itd/SRR8615409.flt3.png"
    # The csv output file should only contain the header
    - path: "SRR8615409/itd/SRR8615409.flt3.bg.csv"
      contains:
        - "position\tcoverage\tsoft_clip_count"

    # The final csv output file for kmt2a should only contain the header
    - path: "SRR8615409/itd/SRR8615409.flt3.csv"
      contains:
        - "td_starts\ttd_ends\trose_start_count\trose_end_count\trose_start_pos\trose_start_anchor_pos\trose_end_pos\trose_end_anchor_pos\tboundary_type\tfuzziness"
