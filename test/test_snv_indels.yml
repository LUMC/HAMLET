# snv-indel pipeline should attempt to generate specified files
- name: test-snv-indels-dry-run-trio
  tags:
    - dry-run
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config pepfile=test/pep/chrM-trio.csv
  stdout:
    contains:
      - "TestSample1/snv-indels/TestSample1.vep.txt.gz"
      - "TestSample1/snv-indels/TestSample1.vep.filtered.txt.gz"

      - "TestSample2/snv-indels/TestSample2.vep.txt.gz"
      - "TestSample2/snv-indels/TestSample2.vep.filtered.txt.gz"

      - "TestSample3/snv-indels/TestSample3.vep.txt.gz"
      - "TestSample3/snv-indels/TestSample3.vep.filtered.txt.gz"

      - "TestSample3/snv-indels/TestSample3.hotspot.vcf"
      - "rule multiqc"
      - "rule call_regions"
    contains_regex:
      - "STAR .* \"ID:TestSample1\" \"SM:TestSample1\" .* --readFilesIn 'test/data/fastq/SRR8615409 chrM_1.fastq.gz' 'test/data/fastq/SRR8615409 chrM_2.fastq.gz'"
      # Test that params.min_intron_size is used
      - "STAR .* --alignIntronMin 50"
      - "TestSample1/snv-indels/TestSample1.bam"
      - "TestSample1/snv-indels/TestSample1.bam.bai"

# snv-indel pipeline should run successfully on chrM test data
- name: test-snv-indels-chrM
  tags:
    - functional
    - snv-indels
  command: >
    bash -c "
    source test/helper.sh

    snakemake \
      --snakefile includes/snv-indels/Snakefile \
      --workflow-profile test \
      --notemp \
      --configfile test/data/config/snv-indels.json \
      --config pepfile=test/pep/chrM.csv
    "
  stderr:
    # snv-indel should not use a local VEP database, but query ensembl
    must_not_contain_regex:
      - 'vep .* --offline'
  files:
    # Check to make sure the read group is set to the sample name
    - path: "SRR8615409/snv-indels/Log.out"
      contains_regex:
        - "outSAMattrRGline +ID:SRR8615409"
    - path: "SRR8615409/snv-indels/SRR8615409.ReadsPerGene.out.tab"
    - path: "SRR8615409/snv-indels/SRR8615409.exon_cov_stats.json"
    - path: "SRR8615409/snv-indels/SRR8615409.alignment_summary_metrics"
    - path: "SRR8615409/snv-indels/SRR8615409.vep.txt.gz"
    - path: "SRR8615409/snv-indels/SRR8615409.vep.filtered.txt.gz"
      contains:
        - "missense_variant"
    # Test log files
    - path: "SRR8615409/snv-indels/Log.final.out"
      contains:
        - "Started job on"
    - path: "log/index_bamfile.SRR8615409.txt"
    - path: "log/tmp.genome.txt"
    - path: "log/exon_cov_ref.txt"
    - path: "log/exon_cov.SRR8615409.txt"
    - path: "log/vardict.SRR8615409.txt"
      contains:
        - "TIME: Getting REF"
    - path: "log/picard_metrics.SRR8615409.txt"
      contains:
        - "CollectAlignmentSummaryMetrics"
        - "CollectInsertSizeMetrics"
        - "RnaSeqMetrics"
    - path: "log/annotate_vars.SRR8615409.txt"
    - path: "log/filter_vep.SRR8615409.txt"
    - path: "SRR8615409/snv-indels/snv-indels-output.json"
      contains:
        # Test that VEP outputs the genomic HGVS
        - "hgvsg"
    # Test that a STAR counts file is generated
    - path: "SRR8615409/snv-indels/SRR8615409.ReadsPerGene.out.tab"
      contains:
        - "N_unmapped"
    # Test that one specific variant between MT-ATP8 and MT-ATP6 hotspots is
    # not in the hotspot vcf file
    - path: SRR8615409/snv-indels/SRR8615409.hotspot.vcf
      must_not_contain:
        - "chrM\t8566"
      # flanking variants
      contains:
        - "chrM\t8468"
        - "chrM\t8655"
    # Test that we generate the call regions file
    - path: "call_regions.bed"
      contains:
        # Region for MT-TF
        - "chrM\t576\t3304"

    # Test that file names are set correctly in MultiQC report
    - path: multiqc_snv_indels.html
      must_not_contain:
        - "ReadsPerGene.out.tab"
        - "Log.final.out"
        - "aln_stats"
        - "insert_stats"
        - "rna_stats"
        - "vep_stats.txt"
      contains:
        - "VEP"
        - "STAR"
        - "Picard"

    # Test that we remove the STAR temporary folders
    - path: SRR8615409/snv-indels/_STARgenome
      should_exist: False
    - path: SRR8615409/snv-indels/_STARpass1
      should_exist: False


# VEP should switch to offline mode when "vep_cache" is specified
- name: test-chrM-vep-cache
  tags:
    - dry-run
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config pepfile=test/pep/chrM.csv
  stdout:
    contains_regex:
      - 'flags="--offline'

# Test if a blacklist variant file is passed to filter-vep script
- name: test-chrM-variant-blacklist
  tags:
    - dry-run
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config
      pepfile=test/pep/chrM.csv
      blacklist=test/data/blacklist.txt
  stdout:
    contains_regex:
      - 'filter_vep.py .* --blacklist test/data/blacklist.txt'

- name: lint-snv-indels
  tags:
    - sanity
    - snv-indels
  command: >
    snakemake
    --lint
    --snakefile includes/snv-indels/Snakefile
    --configfile test/data/config/snv-indels.json
    --config pepfile=test/pep/chrM.csv

- name: snakefmt-snv-indels
  tags:
    - sanity
    - snv-indels
  command: snakefmt --check includes/snv-indels/

- name: test-snv-indels-sample-with-space
  tags:
    - sanity
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --configfile test/data/config/snv-indels.json
    --config pepfile=test/pep/invalid.csv
  exit_code: 1
  stderr:
    contains:
      - 'RuntimeError: Spaces in samples are not supported ("SRR 8615687")'
