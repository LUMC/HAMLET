# snv-indel pipeline should attempt to generate specified files
- name: test-snv-indels-dry-run-trio
  tags:
    - dry-run
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config pepfile=test/pep/chrM-trio.csv min_variant_depth=4
  stdout:
    contains:
      - "TestSample1/snv-indels/TestSample1.vep.txt.gz"
      - "TestSample1/snv-indels/TestSample1.vep.annotated.txt.gz"

      - "TestSample2/snv-indels/TestSample2.vep.txt.gz"
      - "TestSample2/snv-indels/TestSample2.vep.annotated.txt.gz"

      - "TestSample3/snv-indels/TestSample3.vep.txt.gz"
      - "TestSample3/snv-indels/TestSample3.vep.annotated.txt.gz"

      - "rule multiqc"
      - "rule call_regions"
      # Test that we create the id_mappings.txt file
      - "rule id_mapping"
    contains_regex:
      - "STAR .* \"ID:TestSample1\" \"SM:TestSample1\" .* --readFilesIn 'test/data/fastq/SRR8615409 chrM_1.fastq.gz' 'test/data/fastq/SRR8615409 chrM_2.fastq.gz'"
      # Test that params.min_intron_size is used
      - "STAR .* --alignIntronMin 50"
      - "TestSample1/snv-indels/TestSample1.bam"
      - "TestSample1/snv-indels/TestSample1.bam.bai"
      # Test the default variant allele frequency of 0.05
      - "vardict-java .* -f 0.05"
      # Test that the minimum variant depth is 4 set to 4
      - "vardict-java .* -r 4"


- name: test-snv-indels-dry-run-variant-allele-frequency
  tags:
    - dry-run
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config pepfile=test/pep/chrM-trio.csv variant_allele_frequency=0.1
  stdout:
    contains_regex:
      # Test the that we used the specify variant allele frequency of 0.1
      - "vardict-java .* -f 0.1"

- name: test-snv-indels-hamlet-config
  tags:
    - dry-run
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/hamlet-dry.json
    --config pepfile=test/pep/chrM-trio.csv

# snv-indel pipeline should run successfully on chrM test data
- name: test-snv-indels-chrM
  tags:
    - functional
    - snv-indels
  command: >
    bash -c "
    source test/helper.sh

    snakemake \
      --snakefile includes/snv-indels/Snakefile \
      --workflow-profile test \
      --notemp \
      --configfile test/data/config/snv-indels.json \
      --config pepfile=test/pep/chrM.csv
    "
  stderr:
    # snv-indel should not use a local VEP database, but query ensembl
    must_not_contain_regex:
      - 'vep .* --offline'
  files:
    # Check to make sure the read group is set to the sample name
    - path: "SRR8615409/snv-indels/Log.out"
      contains_regex:
        - "outSAMattrRGline +ID:SRR8615409"
    - path: "SRR8615409/snv-indels/SRR8615409.ReadsPerGene.out.tab"
    - path: "SRR8615409/snv-indels/SRR8615409.exon_cov_stats.json"
    - path: "SRR8615409/snv-indels/SRR8615409.alignment_summary_metrics"
    - path: "SRR8615409/snv-indels/SRR8615409.vep.txt.gz"
    - path: "SRR8615409/snv-indels/SRR8615409.vep.annotated.txt.gz"
      contains:
        - "missense_variant"
    # Test log files
    - path: "SRR8615409/snv-indels/Log.final.out"
      contains:
        - "Started job on"
    - path: "log/index_bamfile.SRR8615409.txt"
    - path: "log/tmp.genome.txt"
    - path: "log/exon_cov_ref.txt"
    - path: "log/exon_cov.SRR8615409.txt"
    - path: "log/vardict.SRR8615409.txt"
    - path: "log/picard_metrics.SRR8615409.txt"
      contains:
        - "CollectAlignmentSummaryMetrics"
        - "CollectInsertSizeMetrics"
        - "RnaSeqMetrics"
    - path: "log/VEP.SRR8615409.txt"
    - path: "log/filter_annotate_vep.SRR8615409.txt"
    - path: "SRR8615409/snv-indels/snv-indels-output.json"
      contains:
        # Test that VEP outputs the genomic HGVS
        - "hgvsg"
        # Test that we find a variant
        - "ENST00000361899:c.334A>G"
        # Test that we find a transcript from the annotation criteria file
        - "ENST00000361453:c.117T>C"
        # Test that we find a transcript from the known variants file
        - "ENST00000361390"
    # Test that a STAR counts file is generated
    - path: "SRR8615409/snv-indels/SRR8615409.ReadsPerGene.out.tab"
      contains:
        - "N_unmapped"
    # Test that we generate the call regions file
    - path: "call_regions.bed"
      contains:
        # Region for MT-TF
        - "chrM\t576\t3304"
    - path: multiqc_snv_indels.html
      must_not_contain:
        # Test that file names are set correctly in MultiQC report
        - "ReadsPerGene.out.tab"
        - "Log.final.out"
        - "aln_stats"
        - "insert_stats"
        - "rna_stats"
        - "vep_stats.txt"
        # If the library is unstranded (or strand not set), do not include
        # Strand Mapping in the MultiQC report
        - "RnaSeqMetrics Strand Mapping"
      contains:
        - "VEP"
        - "STAR"
        - "Picard"

    # Test that we remove the STAR temporary folders
    - path: SRR8615409/snv-indels/_STARgenome
      should_exist: False
    - path: SRR8615409/snv-indels/_STARpass1
      should_exist: False
    - path: id_mapping.txt
      contains:
        # Test that we find a transcript from the filter criteria file
        - "ENST00000361899"
        # Test that we find a transcript from the annotation criteria file
        - "ENST00000305877"
        # Test that we find a transcript from the known variants file
        - "ENST00000361390"

- name: test-snv-indels-stranded
  tags:
    - functional
    - snv-indels
  command: >
    bash -c "
    source test/helper.sh

    snakemake \
      --snakefile includes/snv-indels/Snakefile \
      --workflow-profile test \
      --configfile test/data/config/snv-indels.json \
      --config pepfile=test/pep/targetted.csv \
    "
  files:
    - path: multiqc_snv_indels.html
      contains:
        # Test that MultiQC contains a section on de strandedness
      - "RnaSeqMetrics Strand Mapping"
    - path: multiqc_snv_indels_data/picard_rnaseqmetrics_strand_plot.txt
      contains:
        # Test that most reads are the correct strand (sample is reverse stranded)
        - "Sample\tCorrect\tIncorrect"
        - "MO1-RNAseq-1-16714\t155.0\t5.0"
    - path: multiqc_filelist_snv_indels.txt
      should_exist: False

# VEP should switch to offline mode when "vep_cache" is specified
- name: test-chrM-vep-cache
  tags:
    - dry-run
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config pepfile=test/pep/chrM.csv
  stdout:
    contains_regex:
      - 'flags="--offline'

- name: lint-snv-indels
  tags:
    - sanity
    - snv-indels
  command: >
    snakemake
    --lint
    --snakefile includes/snv-indels/Snakefile
    --configfile test/data/config/snv-indels.json
    --config pepfile=test/pep/chrM.csv

- name: snakefmt-snv-indels
  tags:
    - sanity
    - snv-indels
  command: snakefmt --check includes/snv-indels/

- name: test-snv-indels-sample-with-space
  tags:
    - sanity
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --configfile test/data/config/snv-indels.json
    --config pepfile=test/pep/invalid.csv
  exit_code: 1
  stderr:
    contains:
      - 'RuntimeError: Spaces in samples are not supported ("SRR 8615687")'

- name: test-snv-indels-id-mapping-deprecated
  tags:
    - sanity
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config pepfile=test/pep/chrM-trio.csv min_variant_depth=4 ref_id_mapping=filename
  exit_code: 1
  stdout:
    contains:
      - "'ref_id_mapping' is no longer supported"

- name: test-snv-indels-blacklist-deprecated
  tags:
    - sanity
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config pepfile=test/pep/chrM-trio.csv min_variant_depth=4 blacklist=filename
  exit_code: 1
  stdout:
    contains:
      - "'blacklist' is no longer supported"

- name: test-snv-indels-vep-include-consequence-deprecated
  tags:
    - sanity
    - snv-indels
  command: >
    snakemake
    --snakefile includes/snv-indels/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/snv-indels-vep-cache.json
    --config pepfile=test/pep/chrM-trio.csv min_variant_depth=4 vep_include_consequence=missense
  exit_code: 1
  stdout:
    contains:
      - "'vep_include_consequence' is no longer supported"

# Test that the id_mapping script works if the filter criteria contain no transcript versions
- name: test-id-mapping-no-transcript-version
  tags:
    - functional
    - snv-indels
  command: >
    python3 includes/snv-indels/scripts/create_id_mapping.py
    --filter-file test/data/config/filter_criteria.tsv test/data/reference/hamlet-ref.gtf
  stdout:
    contains:
      - "ENSG00000228253\tMT-ATP8\tENST00000361851"

# Test that the id_mapping script works if the filter criteria contain transcript versions
- name: test-id-mapping-with-transcript-version
  tags:
    - functional
    - snv-indels
  command: >
    bash -c "
    echo -e 'transcript_id\tconsequence\tstart\tend\tframe' > filter.tsv;
    echo ENST00000361851.1 >> filter.tsv;

    python3 includes/snv-indels/scripts/create_id_mapping.py  \
      --filter-file filter.tsv \
      test/data/reference/hamlet-ref.gtf
    "
  stdout:
    contains:
      - "ENSG00000228253\tMT-ATP8\tENST00000361851"
