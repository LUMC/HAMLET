name: Continuous Integration

on: [push, pull_request]

defaults:
  run:
    # This is needed for miniconda, see:
    # https://github.com/marketplace/actions/setup-miniconda#important.
    shell: bash -l {0}

jobs:
  snakemake-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - sanity
          - dry-run
        module:
          - expression
          - fusion
          - itd
          - qc
          - snv-indels
    steps:
      - uses: actions/checkout@v2.3.4 # https://github.com/actions/checkout.
        with:
          submodules: recursive

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: HAMLET
          use-mamba: true

      - name: Install singularity
        uses: eWaterCycle/setup-singularity@v6
        with:
          singularity-version: 3.6.4

      # This is used to invalidate the conda environment every week
      - name: Get year and week (for conda cache)
        id: get-date
        run: echo "::set-output name=week::$(/bin/date -u '+%Y-w%V')"
        shell: bash

      - name: Cache conda environment
        id: conda-cache
        uses: actions/cache@v2
        env:
          # Increase this value to manually invalidate the cache
          CACHE_NUMBER: 0
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ hashFiles('environment.yml') }}-${{ steps.get-date.outputs.week }}-${{ env.CACHE_NUMBER }}

      - name: Update HAMLET environment
        run: mamba env update -n HAMLET -f environment.yml
        if: steps.conda-cache.outputs.cache-hit != 'true'

      - name: Run test in conda environment
        run: >-
          pytest --keep-workflow-wd-on-fail
          --tag ${{ matrix.test }}
          --tag ${{ matrix.module }}

      - name: Check pytest stdout messages in case of failure
        if: ${{ failure() }}
        run: >-
          bash -c '
          for file in $(find /tmp -name log.out);
          do echo $file; cat $file; done'

      - name: Check pytest stderr messages in case of failure
        if: ${{ failure() }}
        run: >-
          bash -c '
          for file in $(find /tmp -name log.err);
          do echo $file; cat $file; done'

  test-functional:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - expression
          - fusion
          - itd
          - qc
          - snv-indels
    steps:
      - uses: actions/checkout@v2.3.4 # https://github.com/actions/checkout.
        with:
          submodules: recursive

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: HAMLET
          use-mamba: true

      # This is used to invalidate the conda environment every week
      - name: Get week number
        id: get-date
        run: echo "::set-output name=week::$(/bin/date -u '+%Y-w%V')"
        shell: bash

      - name: Cache conda environment
        id: conda-cache
        uses: actions/cache@v2
        env:
          # Increase this value to manually invalidate the cache
          CACHE_NUMBER: 0
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ hashFiles('environment.yml') }}-${{ steps.get-date.outputs.week }}-${{ env.CACHE_NUMBER }}

      - name: Update HAMLET environment
        run: mamba env update -n HAMLET -f environment.yml
        if: steps.conda-cache.outputs.cache-hit != 'true'

      - name: Install singularity
        uses: eWaterCycle/setup-singularity@v6
        with:
          singularity-version: 3.6.4

      - name: Cache singularity images
        uses: actions/cache@v3
        env:
          # Increase this value to manually invalidate the cache
          CACHE_NUMBER: 0
        with:
          path:
            ~/.singularity/cache/snakemake
          key: singularity-${{ hashFiles('**/common.smk') }}-${{ matrix.module}}-${{ env.CACHE_NUMBER }}
          restore-keys: |
            singularity-${{ hashFiles('**/common.smk') }}-
            singularity-

      - name: Run test in conda environment
        run: >-
          pytest --keep-workflow-wd-on-fail
          --tag ${{ matrix.module}}
          --tag functional

      - name: Check pytest stdout messages in case of failure
        if: ${{ failure() }}
        run: >-
          bash -c '
          for file in $(find /tmp -name log.out);
          do echo $file; cat $file; done'

      - name: Check pytest stderr messages in case of failure
        if: ${{ failure() }}
        run: >-
          bash -c '
          for file in $(find /tmp -name log.err);
          do echo $file; cat $file; done'
